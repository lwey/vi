ipv6: false           # ip6开关，当为false时，停止解析hostanmes为ip6地址
log-level: info       # 日志等级 （info/warning/error/debug/silent）
allow-lan: false      # 是否允许局域网链接(false/true)
unified-delay: false  # 統一延遲
tcp-concurrent: true
external-controller: 127.0.0.1:9236   # 外部控制器地址

clash-for-android:
  append-system-dns: false

profile:
  store-selected: true
  store-fake-ip: true
  tracing: true
  
hosts:
  mtalk.google.com: 108.177.97.188
  
sniffer:
  enable: true
  sniff:
    TLS:
      ports: [443, 8443]
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
  
dns:
  enable: true
  ipv6: false
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16
  listen: 127.0.0.1:1853
  
  default-nameserver:  #默认dns, 用于解析 DNS 器 的域名
    - "223.5.5.5"
    - "119.29.29.29"
    - "8.8.8.8"
    
  nameserver:  #默认的域名解析器，如不配置 fallback/proxy-server-nameserver , 则所有域名都由 nameserver 解析
    - "https://doh.pub/dns-query"
    - "https://dns.alidns.com/dns-query"
  
  #proxy-server-nameserver:  #代理域名解析器，仅用于解析代理的域名
    #- "https://doh.pub/dns-query"
    #- "https://1.0.0.1/dns-query"
    
  fallback:  #后备域名解析器，一般情况下使用境外 DNS, 保证结果可信，配置 fallback后默认启用 fallback-filter,geoip-code为 cn
    - "tls://8.8.4.4:853"
    - "https://dns.cloudflare.com/dns-query"
    - "https://1.1.1.1/dns-query"
    
   # 在以下列表的域名将不会被解析为 fake ip，这些域名相关的解析请求将会返回它们真实的 IP 地址
  fake-ip-filter:
    - "*.lan"
    - "*.localdomain"
    - "*.example"
    - "*.invalid"
    - "*.localhost"
    - "*.test"
    - "*.local"
    - "*.home.arpa"
    - time.*.com
    - time.*.gov
    - time.*.edu.cn
    - time.*.apple.com
    - time1.*.com
    - time2.*.com
    - time3.*.com
    - time4.*.com
    - time5.*.com
    - time6.*.com
    - time7.*.com
    - ntp.*.com
    - ntp1.*.com
    - ntp2.*.com
    - ntp3.*.com
    - ntp4.*.com
    - ntp5.*.com
    - ntp6.*.com
    - ntp7.*.com
    - "*.time.edu.cn"
    - "*.ntp.org.cn"
    - +.pool.ntp.org
    - time1.cloud.tencent.com
    - stun.*.*
    - stun.*.*.*
    - swscan.apple.com
    - mesu.apple.com
    - music.163.com
    - "*.music.163.com"
    - "*.126.net"
    - musicapi.taihe.com
    - music.taihe.com
    - songsearch.kugou.com
    - trackercdn.kugou.com
    - "*.kuwo.cn"
    - api-jooxtt.sanook.com
    - api.joox.com
    - y.qq.com
    - "*.y.qq.com"
    - streamoc.music.tc.qq.com
    - mobileoc.music.tc.qq.com
    - isure.stream.qqmusic.qq.com
    - dl.stream.qqmusic.qq.com
    - aqqmusic.tc.qq.com
    - amobile.music.tc.qq.com
    - localhost.ptlogin2.qq.com
    - "*.msftconnecttest.com"
    - "*.msftncsi.com"
    - "*.xiami.com"
    - "*.music.migu.cn"
    - music.migu.cn
    - +.wotgame.cn
    - +.wggames.cn
    - +.wowsgame.cn
    - +.wargaming.net
    - "*.*.*.srv.nintendo.net"
    - "*.*.stun.playstation.net"
    - "+.playstation.com"
    - "+.playstation.net"
    - "+.xboxlive.com"
    - "+.microsoft.com" 
    - xbox.*.*.microsoft.com
    - "*.*.xboxlive.com"
    - "*.ipv6.microsoft.com"
    - teredo.*.*.*
    - teredo.*.*
    - speedtest.cros.wr.pvp.net
    - +.jjvip8.com
    - www.douyu.com
    - activityapi.huya.com
    - activityapi.huya.com.w.cdngslb.com
    - www.bilibili.com
    - api.bilibili.com
    - a.w.bilicdn1.com
    
  fallback-filter:     #后备域名解析器筛选，满足条件的将使用 fallback结果或只使用 fallback解析
    geoip: true        #为真时，不匹配为geoip规则的使用fallback返回结果
    geoip-code: CN     #geoip匹配区域设定
    ipcidr:            #列表中的ip使用fallback返回解析结果
      - 240.0.0.0/4
      - 0.0.0.0/32
      - 127.0.0.1/32
    domain:            #列表中的域名使用fallback返回解析结果
      - +.facebook.com
      - +.twitter.com
      - +.google.com
      - +.googleapis.com
    
# 锚点 - 节点订阅的参数 [每小时更新一次订阅节点，每 6 秒一次健康检查]
NodeParam: &NodeParam {type: http, interval: 3600, health-check: {enable: true, url: 'https://www.apple.com/library/test/success.html', interval: 6}}

# 锚点 - 节点订阅
proxy-providers: 
  机场名称1:
    url: 'https://sub.xfltd.bond/api/v1/client/subscribe?token=eb12a3e82e14a816698b1d358f06da22'
    <<: *NodeParam
    path: './proxy_providers/机场名称1.yaml'
    override:
      additional-prefix: "[机场1] " # 为订阅节点添加机场名称前缀
  机场名称2:
    url: ''
    <<: *NodeParam
    path: './proxy_providers/机场2.yaml'
    override:
      additional-prefix: "[机场2] " # 为订阅节点添加机场名称前缀

# 锚点 - 节点筛选组
FilterHK: &FilterHK '^(?=.*((?i)🇭🇰|香港|(\b(HK|Hong)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterTW: &FilterTW '^(?=.*((?i)🇹🇼|台湾|(\b(TW|Tai|Taiwan)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterJP: &FilterJP '^(?=.*((?i)🇯🇵|日本|川日|东京|大阪|泉日|埼玉|(\b(JP|Japan)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterKR: &FilterKR '^(?=.*((?i)🇰🇷|韩国|韓|首尔|(\b(KR|Korea)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterSG: &FilterSG '^(?=.*((?i)🇸🇬|新加坡|狮|(\b(SG|Singapore)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterUS: &FilterUS '^(?=.*((?i)🇺🇸|美国|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|(\b(US|United States)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterUK: &FilterUK '^(?=.*((?i)🇬🇧|英国|伦敦|(\b(UK|United Kingdom)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterFR: &FilterFR '^(?=.*((?i)🇫🇷|法国|(\b(FR|France)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterDE: &FilterDE '^(?=.*((?i)🇩🇪|德国|(\b(DE|Germany)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterGame: &FilterGame '^(?=.*((?i)游戏|🎮|(\b(GAME)(\d+)?\b)))(?!.*((?i)回国|校园)).*$'
FilterAll: &FilterAll '^(?=.*(.))(?!.*((?i)群|邀请|返利|循环|官网|客服|网站|网址|获取|订阅|流量|到期|机场|下次|版本|官址|备用|过期|已用|联系|邮箱|工单|贩卖|通知|倒卖|防止|国内|地址|频道|无法|说明|使用|提示|特别|访问|支持|教程|关注|更新|作者|加入|(\b(USE|USED|TOTAL|EXPIRE|EMAIL|Panel|Channel|Author)(\d+)?\b|(\d{4}-\d{2}-\d{2}|\dG)))).*$'

# 策略组参数锚点
# 锚点 - 时延优选参数 [每 6 秒一次惰性健康检查，容差 20ms，时延超过 2 秒判定为失败，失败 3 次则自动触发健康检查]
UrlTest: &UrlTest {type: url-test, interval: 6, tolerance: 20, lazy: true, url: 'http://www.google.com/blank.html', disable-udp: false, timeout: 2000, max-failed-times: 3, hidden: true, include-all-providers: true}
# 锚点 - 故障转移参数 [每 6 秒一次惰性健康检查，时延超过 2 秒判定为失败，失败 3 次则自动触发健康检查]
FallBack: &FallBack {type: fallback, interval: 6, lazy: true, url: 'http://www.google.com/blank.html', disable-udp: false, timeout: 2000, max-failed-times: 3, hidden: true, include-all-providers: true}
# 锚点 - 负载均衡参数 [每 6 秒一次惰性健康检查，时延超过 2 秒判定为失败，失败 3 次则自动触发健康检查]
LoadBalance: &LoadBalance {type: load-balance, interval: 6, lazy: true, url: 'http://www.google.com/blank.html', disable-udp: false, strategy: consistent-hashing, timeout: 2000, max-failed-times: 3, hidden: true, include-all-providers: true}
# 锚点 - 规则参数 [每小时更新一次订阅规则，更新规则时使用直连策略]
RuleProviders: &RuleProviders {type: http, behavior: classical, interval: 3600, format: yaml, proxy: DIRECT}

# 策略组
proxy-groups: 
  - {name: Telegram, type: select, proxies: [HongKong, Taiwan, Japan, Korea, Singapore, American, United]}
  - {name: Twitter, type: select, proxies: [HongKong, Taiwan, Japan, Korea, Singapore, American, United]}
  - {name: AI, type: select, include-all-providers: true, filter: *FilterAll}
  - {name: TikTok, type: select, include-all-providers: true, filter: *FilterAll}
  - {name: YouTube, type: select, proxies: [HongKong, Taiwan, Japan, Korea, Singapore, American, United]}
  - {name: Google, type: select, proxies: [HongKong, Taiwan, Japan, Korea, Singapore, American, United]}
  - {name: Microsoft, type: select, proxies: [HongKong, Taiwan, Japan, Korea, Singapore, American, United]}
  - {name: Final, type: select, proxies: [HongKong, Taiwan, Japan, Korea, Singapore, American, United, DIRECT]}

  
  - {name: HongKong, type: select, proxies: [⏱香港时延优选, 🚥香港故障转移, 🎛香港负载均衡]}
  - {name: Taiwan, type: select, proxies: [⏱台湾时延优选, 🚥台湾故障转移, 🎛台湾负载均衡]}
  - {name: Japan, type: select, proxies: [⏱日本时延优选, 🚥日本故障转移, 🎛日本负载均衡]}
  - {name: Korea, type: select, proxies: [⏱韩国时延优选, 🚥韩国故障转移, 🎛韩国负载均衡]}
  - {name: Singapore, type: select, proxies: [⏱新国时延优选, 🚥新国故障转移, 🎛新国负载均衡]}
  - {name: American, type: select, proxies: [⏱美国时延优选, 🚥美国故障转移, 🎛美国负载均衡]}
  - {name: United, type: select, proxies: [⏱英国时延优选, 🚥英国故障转移, 🎛英国负载均衡]}

# 时延优选策略组
  - {name: ⏱香港时延优选, <<: *UrlTest, filter: *FilterHK}
  - {name: ⏱台湾时延优选, <<: *UrlTest, filter: *FilterTW}
  - {name: ⏱日本时延优选, <<: *UrlTest, filter: *FilterJP}
  - {name: ⏱韩国时延优选, <<: *UrlTest, filter: *FilterKR}
  - {name: ⏱新国时延优选, <<: *UrlTest, filter: *FilterSG}
  - {name: ⏱美国时延优选, <<: *UrlTest, filter: *FilterUS}
  - {name: ⏱英国时延优选, <<: *UrlTest, filter: *FilterUK}
  - {name: ⏱法国时延优选, <<: *UrlTest, filter: *FilterFR}
  - {name: ⏱德国时延优选, <<: *UrlTest, filter: *FilterDE}

# 故障转移策略组
  - {name: 🚥香港故障转移, <<: *FallBack, filter: *FilterHK}
  - {name: 🚥台湾故障转移, <<: *FallBack, filter: *FilterTW}
  - {name: 🚥日本故障转移, <<: *FallBack, filter: *FilterJP}
  - {name: 🚥韩国故障转移, <<: *FallBack, filter: *FilterKR}
  - {name: 🚥新国故障转移, <<: *FallBack, filter: *FilterSG}
  - {name: 🚥美国故障转移, <<: *FallBack, filter: *FilterUS}
  - {name: 🚥英国故障转移, <<: *FallBack, filter: *FilterUK}
  - {name: 🚥法国故障转移, <<: *FallBack, filter: *FilterFR}
  - {name: 🚥德国故障转移, <<: *FallBack, filter: *FilterDE}

# 负载均衡策略组
  - {name: 🎛香港负载均衡, <<: *LoadBalance, filter: *FilterHK}
  - {name: 🎛台湾负载均衡, <<: *LoadBalance, filter: *FilterTW}
  - {name: 🎛日本负载均衡, <<: *LoadBalance, filter: *FilterJP}
  - {name: 🎛韩国负载均衡, <<: *LoadBalance, filter: *FilterKR}
  - {name: 🎛新国负载均衡, <<: *LoadBalance, filter: *FilterSG}
  - {name: 🎛美国负载均衡, <<: *LoadBalance, filter: *FilterUS}
  - {name: 🎛英国负载均衡, <<: *LoadBalance, filter: *FilterUK}
  - {name: 🎛法国负载均衡, <<: *LoadBalance, filter: *FilterFR}
  - {name: 🎛德国负载均衡, <<: *LoadBalance, filter: *FilterDE}

# 订阅规则
rule-providers:

  Reject:
    <<: *RuleProviders
    path: './providers/rule/Reject.yaml'
    url: 'https://raw.githubusercontent.com/yifai/Clash/main/Rules/Reject.yaml'    
    
  LAN:
    <<: *RuleProviders
    path: './rules/Lan.yaml'
    url: 'https://kelee.one/Tool/Clash/Rule/LAN_SPLITTER.yaml'

  Direct:
    <<: *RuleProviders
    path: './rules/Direct.yaml'
    url: 'https://kelee.one/Tool/Clash/Rule/Direct.yaml'

  Proxy:
    <<: *RuleProviders
    path: './rules/Proxy.yaml'
    url: 'https://kelee.one/Tool/Clash/Rule/Proxy.yaml'

  ChinaDownloadCDN:
    <<: *RuleProviders
    path: './rules/ChinaDownloadCDN.yaml'
    url: 'https://kelee.one/Tool/Clash/Rule/ChinaDownloadCDN.yaml'

  #InternationalDownloadCDN:
    #<<: *RuleProviders
    #path: './rules/InternationalDownloadCDN.yaml'
    #url: 'https://kelee.one/Tool/Clash/Rule/InternationalDownloadCDN.yaml'

  AI:
    <<: *RuleProviders
    path: './rules/AI.yaml'
    url: 'https://kelee.one/Tool/Clash/Rule/AI.yaml'

  TikTok:
    <<: *RuleProviders
    path: './rules/TikTok.yaml'
    url: 'https://kelee.one/Tool/Clash/Rule/TikTok.yaml'

  Twitter:
    <<: *RuleProviders
    path: './ruleset/Twitter.yaml'
    url: 'https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/Twitter.yaml'    

  YouTube:
    <<: *RuleProviders
    path: './ruleset/YouTube.yaml'
    url: 'https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/YouTube.yaml'

  Microsoft:
    <<: *RuleProviders
    path: './rules/Microsoft.yaml'
    url: 'https://rule.kelee.one/Clash/Microsoft.yaml'

  Google:
    <<: *RuleProviders
    path: './rules/Google.yaml'
    url: 'https://rule.kelee.one/Clash/Google.yaml'

  Telegram:
    <<: *RuleProviders
    path: './rules/Telegram.yaml'
    url: 'https://kelee.one/Tool/Clash/Rule/Telegram.yaml'

  ESET_China:
    <<: *RuleProviders
    path: './rules/ESET_China.yaml'
    url: 'https://kelee.one/Tool/Clash/Rule/ESET_China.yaml'

# 规则指向
rules:


  #本地/局域网
  - DOMAIN-SUFFIX,ip6-localhost,DIRECT,no-resolve
  - DOMAIN-SUFFIX,ip6-loopback,DIRECT,no-resolve
  - DOMAIN-SUFFIX,local,DIRECT,no-resolve
  - DOMAIN-SUFFIX,localhost,DIRECT,no-resolve
  - DOMAIN-SUFFIX,lan,DIRECT,no-resolve
  
  #其它

  - PROCESS-NAME,BitComet,DIRECT
  - PROCESS-NAME,qbittorrent,DIRECT
  - DOMAIN-SUFFIX,yowindow.ru,DIRECT
  - DOMAIN-SUFFIX,yowindow.com,DIRECT
  
  
  - IP-CIDR,127.0.0.1/32,REJECT,no-resolve # 修复 DNS 泄漏
  - IP-CIDR,198.18.0.1/16,REJECT,no-resolve
  - IP-CIDR,28.0.0.1/8,REJECT,no-resolve
  - IP-CIDR6,::1/128,REJECT,no-resolve
  - RULE-SET, LAN, DIRECT
  - RULE-SET, Direct, DIRECT
  - RULE-SET, Proxy, Final
  - RULE-SET, ChinaDownloadCDN, DIRECT
  - RULE-SET, AI, AI
  - RULE-SET, TikTok, TikTok
  - RULE-SET, Reject, REJECT
  - RULE-SET, Twitter, Twitter
  - RULE-SET, YouTube, YouTube
  - RULE-SET, Microsoft, Microsoft
  - RULE-SET, Google, Google
  - RULE-SET, Telegram, Telegram
  - RULE-SET, ESET_China, DIRECT
  - GEOIP, CN, DIRECT
  - MATCH, Final
